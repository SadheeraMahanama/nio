/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 * @flow
 */

import React, {Component} from 'react';
import {Platform, StyleSheet, Text, View,Image,ScrollView,TextInput,KeyboardAvoidingView,TouchableOpacity,TouchableHighlight,AsyncStorage,} from 'react-native';
import { Container, Header, Content, Button, } from 'native-base';

const ACCESS_TOKEN = 'access_token';

//const  { width: WIDTH } = Dimentions.get()
export default class SignUp extends Component {

  constructor(){
    super();

    this.state = {
      email: "",
      name: "",
      password: "",
      password_confirmation: "",
      errors: [],
      showProgress: false,
    }
} 
redirect(routeName, accessToken){
  this.props.navigator.push({
    name: routeName
  });
}
async storeToken(accessToken) {
  try {
      await AsyncStorage.setItem(ACCESS_TOKEN, accessToken);
      console.log("Token was stored successfull ");
  } catch(error) {
      console.log("Something went wrong");
  }
}

async onRegisterPressed() {
  this.setState({showProgress: true})
  try {
    let response = await fetch('https://cupdes.com/api/v1/create-user', {
                            method: 'POST',
                            headers: {
                              'X-AUTH-TOKEN' :  'Px7zgU79PYR9ULEIrEetsb',
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                              user:{
                                first_name: this.state.First_Name,
                                second_name: this.state.Second_Name,
                                phone_number: this.state.Telephone_Number,
                                email: this.state.email,
                                password: this.state.password,
                                
                              }
                            })
                          });
                          let res = await response.text();
                          if (response.status >= 200 && response.status < 300) {
                              //Handle success
                              let accessToken = res;
                              console.log(accessToken);
                              //On success we will store the access_token in the AsyncStorage
                              this.storeToken(accessToken);
                              this.redirect('home');
                          } else {
                              //Handle error
                              let error = res;
                              throw error;
                          }
                        } catch(errors) {
                          //errors are in JSON form so we must parse them first.
                          let formErrors = JSON.parse(errors);
                          //We will store all the errors in the array.
                          let errorsArray = [];
                          for(var key in formErrors) {
                            //If array is bigger than one we need to split it.
                            if(formErrors[key].length > 1) {
                                formErrors[key].map(error => errorsArray.push(`${key} ${error}`));
                            } else {
                                errorsArray.push(`${key} ${formErrors[key]}`);
                            }
                          }
                          this.setState({errors: errorsArray})
                          this.setState({showProgress: false});
                        }  }
    SignupHandler=()=>{
        this.props.navigation.navigate('DrewerNav')
    }
    


      
  render() {
    return (
      <KeyboardAvoidingView
      style={styles.wrapper}
      >
        <View style={styles.scrollWrapper}>
 <ScrollView style={styles.scrollView}>
      
        <View style={styles.LogoContainer}>
        <Text style={styles.LogoText}>Sign Up</Text>
        </View>
        <View>
        <TextInput
          style={styles.Input} onChangeText={ (text)=> this.setState({First_Name: text}) }
          placeholder={'First Name'}
          placeholderTextColor={'#222'}
          underLineColorAndroid='transparent'
          />
        </View>
        <View>
        <TextInput
          style={styles.Input} onChangeText={ (text)=> this.setState({Second_Name: text}) }
          placeholder={'Second Name'}
          placeholderTextColor={'#222'}
          underLineColorAndroid='transparent'
          />
        </View>
        <View>
        <TextInput
          style={styles.Input} onChangeText={ (text)=> this.setState({Telephone_Number: text}) }
          placeholder={'Telephone Number'}
          placeholderTextColor={'#222'}
          underLineColorAndroid='transparent'
          />
        </View>
        <View>
        <TextInput
          style={styles.Input} onChangeText={ (text)=> this.setState({email: text}) }
          placeholder={'User Email'}
          placeholderTextColor={'#222'}
          underLineColorAndroid='transparent'
          />
        </View>
        <View>
        <TextInput
          style={styles.Input}  onChangeText={ (text)=> this.setState({password: text}) }
          placeholder={'Password'}
          secureTextEntry={true}
          placeholderTextColor={'#222'}
          underLineColorAndroid='transparent'
          />
        </View>
        <View>
         
        <TextInput
          style={styles.Input} onChangeText={ (text)=> this.setState({password_confirmation: text}) }
          placeholder={'Confirm Password'}
          secureTextEntry={true}
          placeholderTextColor={'#222'}
          underLineColorAndroid='transparent'
          />
          
          <TouchableHighlight >
          <Button style={styles.btnLogin} onPress={this.SignUpHandler}
              onPress={this.onRegisterPressed.bind(this)} 
    >
            <Text style={styles.text} >Sign Up </Text>

            </Button>
            
          </TouchableHighlight>
          <Text style={styles.LogoText1}>Sign Up</Text>
         
        
        
      </View>
      </ScrollView>
 </View>
      </KeyboardAvoidingView>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    width: null,
    height:null,
    top:0,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ffffff',
    borderColor: '#222',
    borderWidth: 1
    
  },
  wrapper:{
         
    flex:1,
    backgroundColor:'#a0005d',
    position:'relative'
   
    },
    scrollViewWrapper:{
    marginTop:70,
    flex:1,
    },
    scrollView:{
    paddingLeft:30,
    paddingRight:30,
    paddingTop:20,
    // flex:1
    },
  
  LogoContainer: {
    alignItems: 'center',
    position:'relative'
  },
  LogoText: {
      fontSize: 30,
      textAlign: 'center',
      position: 'relative',
      top: '-26%',
     // fontFamily: 'Titillium Web',
      fontFamily: 'sans-serif',
      color:'#050404'
  },
  LogoText1: {
    fontSize: 30,
    textAlign: 'center',
    position: 'relative',
    top: '-10%',
   // fontFamily: 'Titillium Web',
    fontFamily: 'sans-serif',
    color:'#050404'
},
  Input:{
      top: '-20%',
      width:250,
      height:40,
      fontSize:14,
      textAlign: 'left',
      opacity:0.5,
      margin: 15,
      borderColor: '#ffffff',
      borderWidth: 1   
  },
  btnLogin:
  {
    top:-10,
    width:250,    
    height: 70,                 
    backgroundColor:'#a0005d',
    justifyContent: 'center',
    alignItems: 'center',
    marginLeft: 'auto',
    marginRight: 'auto'
  },
  text:{
    color: '#ffffff',
    fontSize: 25,
  }
  

  
  
});
http://cupdes.com/api/v1/create-user